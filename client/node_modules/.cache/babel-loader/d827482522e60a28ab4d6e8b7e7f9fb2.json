{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Bootcamp/Homework/googleBookSearch/client/src/Components/ResultList.js\";\nimport React from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Image from 'material-ui-image';\nimport { Grid, Typography, ListItemText } from '@material-ui/core';\nexport const ResultList = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, props.results.length ? /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }\n  }, props.results.map(result => /*#__PURE__*/React.createElement(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 41\n      }\n    }, result.volumeInfo.title)),\n    secondary: /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 41\n      }\n    }, result.volumeInfo.authors), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"caption\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: result.volumeInfo.imageLinks.thumbnail,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 15\n      }\n    }), result.volumeInfo.description)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 29\n    }\n  })))) : /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, \"No Results to Display\"));\n};","map":{"version":3,"sources":["/Users/admin/Bootcamp/Homework/googleBookSearch/client/src/Components/ResultList.js"],"names":["React","List","ListItem","Image","Grid","Typography","ListItemText","ResultList","props","results","length","map","result","volumeInfo","title","authors","imageLinks","thumbnail","description"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,YAA3B,QAA+C,mBAA/C;AAEA,OAAO,MAAMC,UAAU,GAAIC,KAAD,IAAW;AACjC,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,KAAK,CAACC,OAAN,CAAcC,MAAd,gBACG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,KAAK,CAACC,OAAN,CAAcE,GAAd,CAAkBC,MAAM,iBAErB,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGI,oBAAC,YAAD;AACI,IAAA,OAAO,eACH,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAE,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACCA,MAAM,CAACC,UAAP,CAAkBC,KADnB,CADJ,CAFR;AAQI,IAAA,SAAS,eACL,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD;AACI,MAAA,OAAO,EAAC,IADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGKF,MAAM,CAACC,UAAP,CAAkBE,OAHvB,CADJ,eAMtB,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAE,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AAAK,MAAA,GAAG,EAAGH,MAAM,CAACC,UAAP,CAAkBG,UAAlB,CAA6BC,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,EAEKL,MAAM,CAACC,UAAP,CAAkBK,WAFvB,CANsB,CATR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CAFH,CADL,CADH,gBAiCO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAlCZ,CADJ;AAuCH,CAxCM","sourcesContent":["import React from 'react'\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Image from 'material-ui-image'\nimport { Grid, Typography, ListItemText } from '@material-ui/core';\n\nexport const ResultList = (props) => {\n    return (\n        <div>\n            {props.results.length ? (\n                <List>\n                    {props.results.map(result => (\n\n                        <ListItem>\n                            {/* <Image src= {result.volumeInfo.imageLinks.thumbnail}> \n                            </Image> */}\n                            <ListItemText\n                                primary={\n                                    <React.Fragment>\n                                        <Typography variant= \"h5\">\n                                        {result.volumeInfo.title}\n              </Typography>\n                                    </React.Fragment>\n                            }\n                                secondary={\n                                    <React.Fragment>\n                                        <Typography\n                                            variant=\"h6\"                                           \n                                        >\n                                            {result.volumeInfo.authors}\n              </Typography> \n              <Typography variant= \"caption\">\n              <img src ={result.volumeInfo.imageLinks.thumbnail}></img>\n                  {result.volumeInfo.description}\n                  </Typography>                                      \n                                    </React.Fragment>\n                                }\n                            />\n                        </ListItem>\n                    ))}\n                </List>\n            ) : (\n                    <h3>No Results to Display</h3>\n                )}\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}