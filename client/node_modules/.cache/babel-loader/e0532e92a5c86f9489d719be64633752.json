{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Bootcamp/Homework/googleBookSearch/client/src/Components/ResultList.js\";\nimport React, { useState } from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, Typography, ListItemText } from '@material-ui/core';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Link from '@material-ui/core/Link';\nimport API from '..//utils/API';\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1)\n  }\n}));\nexport const ResultList = props => {\n  const [books, setBooks] = useState();\n\n  function submitBook(event) {\n    API.Author.create({\n      name: props.volumeInfo.authors\n    });\n  }\n\n  const preventDefault = event => event.preventDefault();\n\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, props.results.length ? /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, props.results.map(result => /*#__PURE__*/React.createElement(ListItem, {\n    key: result.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: result.volumeInfo.imageLinks.thumbnail,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      href: result.selfLink,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 41\n      }\n    }, result.volumeInfo.title), /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      size: \"small\",\n      className: classes.button,\n      startIcon: /*#__PURE__*/React.createElement(SaveIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 60\n        }\n      }),\n      onClick: submitBook(props),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 45\n      }\n    }, \"SAVE\"))),\n    secondary: /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 41\n      }\n    }, result.volumeInfo.authors, \", published \", result.volumeInfo.publishedDate), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"caption\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 41\n      }\n    }, result.volumeInfo.description)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 29\n    }\n  })))) : /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, \"No Results to Display\"));\n};","map":{"version":3,"sources":["/Users/admin/Bootcamp/Homework/googleBookSearch/client/src/Components/ResultList.js"],"names":["React","useState","List","ListItem","makeStyles","Button","Typography","ListItemText","SaveIcon","Link","API","useStyles","theme","button","margin","spacing","ResultList","props","books","setBooks","submitBook","event","Author","create","name","volumeInfo","authors","preventDefault","classes","results","length","map","result","id","imageLinks","thumbnail","selfLink","title","publishedDate","description"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, Typography, ListItemText} from '@material-ui/core';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Link from '@material-ui/core/Link';\nimport API from '..//utils/API';\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        margin: theme.spacing(1),\n    },\n}));\n\nexport const ResultList = (props) => {\n    const [books, setBooks] = useState()\n    function submitBook(event) {\n        API.Author.create({ name: props.volumeInfo.authors })\n\n    }\n    const preventDefault = (event) => event.preventDefault();\n    const classes = useStyles();\n    return (\n        <div>\n            {props.results.length ? (\n                <List>\n                    {props.results.map(result => (\n\n                        <ListItem key={result.id}>\n                            {/* <Image src= {result.volumeInfo.imageLinks.thumbnail}> \n                            </Image> */}\n                            <ListItemText\n                                primary={\n                                    <React.Fragment>\n                                        <img src={result.volumeInfo.imageLinks.thumbnail}></img>\n                                        <Typography variant=\"h5\">\n                                        <Link href={result.selfLink}>\n                                        \n                                            {result.volumeInfo.title}\n                                            </Link>\n                                            <Button\n                                                variant=\"outlined\"\n                                                color=\"primary\"\n                                                size=\"small\"\n                                                className={classes.button}\n                                                startIcon={<SaveIcon />}\n                                                onClick={submitBook(props)}\n                                            >\n                                                SAVE\n                                            </Button>\n                                        </Typography>\n                                    </React.Fragment>\n                                }\n                                secondary={\n                                    <React.Fragment>\n                                        <Typography\n                                            variant=\"h6\"\n                                        >\n                                            {result.volumeInfo.authors}, published {result.volumeInfo.publishedDate}\n                                        </Typography>\n                                        <Typography variant=\"caption\">\n                                        \n                                            {result.volumeInfo.description}\n                                        </Typography>\n                                    </React.Fragment>\n                                }\n                            />\n                        </ListItem>\n                    ))}\n                </List>\n            ) : (\n                    <h3>No Results to Display</h3>\n                )}\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}