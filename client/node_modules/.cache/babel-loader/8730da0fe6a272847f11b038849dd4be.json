{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Bootcamp/Homework/googleBookSearch/client/src/Components/Saved.js\";\nimport React from 'react';\nexport const Saved = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 9\n    }\n  }, props.results.length ? /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 17\n    }\n  }, props.results.map(result => /*#__PURE__*/React.createElement(ListItem, {\n    key: result.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: result.volumeInfo.imageLinks.thumbnail,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      href: result.selfLink,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 41\n      }\n    }, result.volumeInfo.title), /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      size: \"small\",\n      className: classes.button,\n      startIcon: /*#__PURE__*/React.createElement(SaveIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 60\n        }\n      }),\n      onClick: () => {\n        alert('clicked');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 45\n      }\n    }, \"SAVE\"))),\n    secondary: /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 41\n      }\n    }, result.volumeInfo.authors, \", published \", result.volumeInfo.publishedDate), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"caption\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 41\n      }\n    }, result.volumeInfo.description)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 29\n    }\n  })))) : /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, \"No Results to Display\"));\n};","map":{"version":3,"sources":["/Users/admin/Bootcamp/Homework/googleBookSearch/client/src/Components/Saved.js"],"names":["React","Saved","props","results","length","map","result","id","volumeInfo","imageLinks","thumbnail","selfLink","title","classes","button","alert","authors","publishedDate","description"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAC5B,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,KAAK,CAACC,OAAN,CAAcC,MAAd,gBACG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,KAAK,CAACC,OAAN,CAAcE,GAAd,CAAkBC,MAAM,iBAErB,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAEA,MAAM,CAACC,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGI,oBAAC,YAAD;AACI,IAAA,OAAO,eACH,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,GAAG,EAAED,MAAM,CAACE,UAAP,CAAkBC,UAAlB,CAA6BC,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAEJ,MAAM,CAACK,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEKL,MAAM,CAACE,UAAP,CAAkBI,KAFvB,CADA,eAKI,oBAAC,MAAD;AACI,MAAA,OAAO,EAAC,UADZ;AAEI,MAAA,KAAK,EAAC,SAFV;AAGI,MAAA,IAAI,EAAC,OAHT;AAII,MAAA,SAAS,EAAEC,OAAO,CAACC,MAJvB;AAKI,MAAA,SAAS,eAAE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALf;AAMI,MAAA,OAAO,EAAE,MAAM;AAAEC,QAAAA,KAAK,CAAC,SAAD,CAAL;AAAkB,OANvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,CAFJ,CAFR;AAsBI,IAAA,SAAS,eACL,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD;AACI,MAAA,OAAO,EAAC,IADZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGKT,MAAM,CAACE,UAAP,CAAkBQ,OAHvB,kBAG4CV,MAAM,CAACE,UAAP,CAAkBS,aAH9D,CADJ,eAMI,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEKX,MAAM,CAACE,UAAP,CAAkBU,WAFvB,CANJ,CAvBR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CAFH,CADL,CADH,gBA+CO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAhDZ,CADJ;AAsDH,CAvDM","sourcesContent":["import React from 'react'\n\nexport const Saved = (props) => {\n    return (\n        <div>\n            {props.results.length ? (\n                <List>\n                    {props.results.map(result => (\n\n                        <ListItem key={result.id}>\n                            {/* <Image src= {result.volumeInfo.imageLinks.thumbnail}> \n                            </Image> */}\n                            <ListItemText\n                                primary={\n                                    <React.Fragment>\n                                        <img src={result.volumeInfo.imageLinks.thumbnail}></img>\n                                        <Typography variant=\"h5\">\n                                        <Link href={result.selfLink}>\n                                        \n                                            {result.volumeInfo.title}\n                                            </Link>\n                                            <Button\n                                                variant=\"outlined\"\n                                                color=\"primary\"\n                                                size=\"small\"\n                                                className={classes.button}\n                                                startIcon={<SaveIcon />}\n                                                onClick={() => { alert('clicked') }}\n                                            >\n                                                SAVE\n                                            </Button>\n                                        </Typography>\n                                    </React.Fragment>\n                                }\n                                secondary={\n                                    <React.Fragment>\n                                        <Typography\n                                            variant=\"h6\"\n                                        >\n                                            {result.volumeInfo.authors}, published {result.volumeInfo.publishedDate}\n                                        </Typography>\n                                        <Typography variant=\"caption\">\n                                        \n                                            {result.volumeInfo.description}\n                                        </Typography>\n                                    </React.Fragment>\n                                }\n                            />\n                        </ListItem>\n                    ))}\n                </List>\n            ) : (\n                    <h3>No Results to Display</h3>\n                )}\n        \n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}