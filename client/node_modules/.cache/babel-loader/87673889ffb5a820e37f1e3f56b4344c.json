{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Bootcamp/Homework/googleBookSearch/client/src/Components/ResultList.js\";\nimport React from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, Typography, ListItemText } from '@material-ui/core';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Link from '@material-ui/core/Link';\nimport API from '../utils/API';\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1)\n  }\n}));\nexport const ResultList = props => {\n  const handleBookSubmit = result => {\n    API.Book.create({\n      title: result\n    }); // window.location.reload(false)\n  };\n\n  const preventDefault = event => event.preventDefault();\n\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, props.results.length ? /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, props.results.map(result => /*#__PURE__*/React.createElement(ListItem, {\n    key: result.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: result.volumeInfo.imageLinks.thumbnail,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      href: result.selfLink,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 41\n      }\n    }, result.volumeInfo.title), /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      size: \"small\",\n      className: classes.button,\n      startIcon: /*#__PURE__*/React.createElement(SaveIcon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 60\n        }\n      }),\n      onClick: () => {\n        alert(\"reading is fun! \" + result.volumeInfo.authors);\n        handleBookSubmit(\"test\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 45\n      }\n    }, \"SAVE\"))),\n    secondary: /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 41\n      }\n    }, result.volumeInfo.authors, \", published \", result.volumeInfo.publishedDate), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"caption\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 41\n      }\n    }, result.volumeInfo.description)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 29\n    }\n  })))) : /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }, \"No Results to Display\"));\n};","map":{"version":3,"sources":["/Users/admin/Bootcamp/Homework/googleBookSearch/client/src/Components/ResultList.js"],"names":["React","List","ListItem","makeStyles","Button","Typography","ListItemText","SaveIcon","Link","API","useStyles","theme","button","margin","spacing","ResultList","props","handleBookSubmit","result","Book","create","title","preventDefault","event","classes","results","length","map","id","volumeInfo","imageLinks","thumbnail","selfLink","alert","authors","publishedDate","description"],"mappings":"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","sourcesContent":["import React from 'react'\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, Typography, ListItemText} from '@material-ui/core';\nimport SaveIcon from '@material-ui/icons/Save';\nimport Link from '@material-ui/core/Link';\nimport API from '../utils/API';\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        margin: theme.spacing(1),\n    },\n}));\n\nexport const ResultList = (props) => {\n\n    const handleBookSubmit = (result) => {\n        \n        API.Book.create({title: result})\n    \n       // window.location.reload(false)\n      }\n\n    const preventDefault = (event) => event.preventDefault();\n    const classes = useStyles();\n    return (\n        <div>\n            {props.results.length ? (\n                <List>\n                    {props.results.map(result => (\n\n                        <ListItem key={result.id}>\n                            {/* <Image src= {result.volumeInfo.imageLinks.thumbnail}> \n                            </Image> */}\n                            <ListItemText\n                                primary={\n                                    <React.Fragment>\n                                        <img src={result.volumeInfo.imageLinks.thumbnail}></img>\n                                        <Typography variant=\"h5\">\n                                        <Link href={result.selfLink}>\n                                        \n                                            {result.volumeInfo.title}\n                                            </Link>\n                                            <Button\n                                                variant=\"outlined\"\n                                                color=\"primary\"\n                                                size=\"small\"\n                                                className={classes.button}\n                                                startIcon={<SaveIcon />}\n                                                onClick={() => { \n                                                    alert(\"reading is fun! \" + result.volumeInfo.authors)\n                                                    handleBookSubmit(\"test\") \n                                                }}\n                                            >\n                                                SAVE\n                                            </Button>\n                                        </Typography>\n                                    </React.Fragment>\n                                }\n                                secondary={\n                                    <React.Fragment>\n                                        <Typography\n                                            variant=\"h6\"\n                                        >\n                                            {result.volumeInfo.authors}, published {result.volumeInfo.publishedDate}\n                                        </Typography>\n                                        <Typography variant=\"caption\">\n                                        \n                                            {result.volumeInfo.description}\n                                        </Typography>\n                                    </React.Fragment>\n                                }\n                            />\n                        </ListItem>\n                    ))}\n                </List>\n            ) : (\n                    <h3>No Results to Display</h3>\n                )}\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}